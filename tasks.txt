- Clean up problem statement and proposed solution in Chapter 1
- Better introduction for background
  / mention pros of pure functions
  / mention what effects I am talking about
  / more about static and dynamic instances
- Maybe no exception comparison
/ Specify language more precisely (inspired by Koka)
- Mention that we are using deep handlers
- Explain commute better
- Different color for return in the handler case
- One more fancy example for dynamic instances (ST example) (ST paper)
- Introduction:
	- contributions
	- side-effects stuff in introduction
	- mention monads as alternative or not at all
	- precise control over non-pure part
	- Write outline first
	- Assume no knowledge of pure programming
	- 3-5 pages
	- Have objective.
	- make sure relations between sentences are there
	- many programs need side-effects
	- side-effects hard for compilers
	- leave out hard to reason
	- ways of distinguising pure from non-pure
	- we focus on algebraic effects
	- Start with outline
	- essence of the problem, build up to it
	- effect encapsulation, address specific kind
	- problem more general than algebraic effects
- related work about monad/monad transformers/free

- notes introduction
- update 2.1
- safety in storyline (koka for example) (can connect to dynamic instances)
- ST in algebraic effects
- a lot of work on language that allow more control
	- control
	- separation
	- encapsulatio
	- cite actual languages
	- algebraic effects gives most things
	- and then limitations
- put in algebraic effecst example (small)
	- State example
	- see only 1 cell, limitations
	- only give handler signature
	- connect to the ST monad
	- cite
- introduce type systems generally

- update introduction chapter 2
- connect more to ST monad
- safety guaruantees of the different systems
- type system are everywhere, but often do not do much, we can do more with effect system, more control/guaruantees
- type systems appear in all kinds of languages
- dynamic instances connect to my system with st example, forces you to program in this way

- ask Casper to send pdf
- just make bullet list maybe in 2.3, explain them after.
